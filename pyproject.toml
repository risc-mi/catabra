[tool.poetry]
name = "catabra"
version = "0.1.0"
description = "CaTabRa is a Python package for analyzing tabular data in a largely automated way"
authors = ["RISC Software GmbH"]
license = "Apache 2.0 with Commons Clause"
readme = "README.md"
repository = "https://github.com/risc-mi/catabra"
packages = [
    {include = "catabra"}
]
classifiers = [
    "Programming Language :: Python :: 3",
]

[tool.poetry.dependencies]
python = ">=3.9,<3.11"
llvmlite = "0.38.0"
shap = "^0.41.0"
auto-sklearn = "^0.14.6"
pandas = "^1.4.1"
tables = "^3.6.1"
xlrd = "^2.0.1"
xlsxwriter = "^3.0.2"
openpyxl = "^3.0.9"
matplotlib = "^3.4.3"
numpy = "^1.21.5"
numba = "^0.55.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.1"
pytest-subtests = "^0.10.0"
pytest-cov = "^4.0.0"
pytest-xdist = "^3.2.0"
isort = "^5.12.0"
ruff = "^0.0.257"
sphinx = "^6.1.3"
poethepoet = "^0.19.0"
myst-parser = "^1.0.0"
nbsphinx = "^0.9.1"
pandoc = "^2.3"
nbsphinx-link = "^1.3.0"
sphinxcontrib-github = "^0.1.3"
sphinx-rtd-theme = "^1.2.0"

[tool.poetry.group.optional]
optional = true

[tool.poetry.group.optional.dependencies]
xgboost = {version="^1.7.4", extras=['all']}
plotly = {version="^5.13.1", extras=['all']}
dask = {version="^2023.2.1", extras=['all']}
jupyter = {version="^1.0.0", extras=['all']}
pyod = {version="^1.0.9", extras=['all']}


[tool.poetry_bumpversion.file."catabra/__version__.py"]

[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow",
    "allowed_to_fail: marks tests that can fail under certain conditions without it being an error"
]
testpaths = ['test']

[tool.ruff]
line-length = 120
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
extend-select = [
    "D300", # triple-single-quotes
    "D407", # dashed-underline-after-section
    "D418", # undocumented-param
    "D419", # empty-docstring
]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.ruff.per-file-ignores]
"config.py" = ["E501"]

[tool.isort]
profile = "black"
extend_skip = ["__init__.py"]

[tool.poe.tasks]
sort_imports = "isort ."
lint = "ruff check ."
test = "pytest -ra --doctest-modules --junitxml=python-junit.xml --cov --cov-report=html --cov-report term"
update_nbs = "jupyter nbconvert --execute --to notebook --inplace examples/*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
